/*Analyze Employee Sales Contribution
To Find the total sales amount, tax, and total due for each employee, grouped by their department.*/
select
emp.BusinessEntityID,
coalesce(p.FirstName,'')+' '+coalesce(p.MiddleName,'')+' '+coalesce(p.LastName,'') as [Full Name],
dep.Name as [Department Name],
SUM(sod.LineTotal) as [Sales Amount],
SUM(soh.TaxAmt) as [Tax Amount],
SUM(soh.TotalDue) as [Total Sales]

from 
HumanResources.Employee as emp inner join HumanResources.EmployeeDepartmentHistory as empd
on emp.BusinessEntityID = empd.BusinessEntityID
inner join HumanResources.Department as dep
on empd.DepartmentID = dep.DepartmentID
inner join Person.Person as p
on emp.BusinessEntityID = p.BusinessEntityID
inner join Sales.SalesPerson as sp
on emp.BusinessEntityID = sp.BusinessEntityID
inner join Sales.SalesOrderHeader as soh
on sp.BusinessEntityID = soh.SalesPersonID
inner join Sales.SalesOrderDetail as sod
on soh.SalesOrderID = sod.SalesOrderID

group by p.FirstName,p.LastName,p.MiddleName,emp.BusinessEntityID,dep.Name
order by [Total Sales] desc

/*Top Selling Products by Category
To Retrieve the top 5 products (by quantity) sold in each category, along with their total sales value and category name.*/
select top 5
p.Name as [Product Name],
pc.Name as [Category Name],
SUM(p.ListPrice) as [List Price],
SUM(pii.Quantity) as [Quantity]

from 
Production.Product as p inner join Production.ProductSubcategory as psc
on p.ProductSubcategoryID = psc.ProductSubcategoryID
inner join Production.ProductCategory as pc
on pc.ProductCategoryID = psc.ProductCategoryID
inner join Production.ProductInventory as pii
on p.ProductID = pii.ProductID

group by p.Name , pc.Name
order by Quantity desc

/*Hiring Trends vs Sales Trends
to Analyze the hiring trends over the years and
compare them with the total sales amount generated during the same periods.*/
/* Step 1: Count employees hired per year */
select 
YEAR(HireDate) as [Year], 
COUNT(*) as [NewEmployees]
from HumanResources.Employee
group by YEAR(HireDate)
order by [Year] 
/* Step 2: Total sales per year */
select 
YEAR(OrderDate) as [Year],
SUM(TotalDue) as [Total Sales]
from Sales.SalesOrderHeader
group by YEAR(OrderDate)
order by [Year]

/*Impact of Employee Experience on Sales
to Calculate the average sales revenue generated by employees grouped by their years of experience.*/
select
emp.BusinessEntityID,
AVG(soh.TotalDue) as [Avrage Sales],
COUNT(sod.SalesOrderID) as [Total orders handled],
SUM(soh.TotalDue) as [Total Sales],
DATEDIFF(year,HireDate,getdate()) as [Years Of Experience]

from 
HumanResources.Employee as emp inner join Sales.SalesPerson as sp
on emp.BusinessEntityID = sp.BusinessEntityID
inner join Sales.SalesOrderHeader as soh
on sp.BusinessEntityID = soh.SalesPersonID
inner join Sales.SalesOrderDetail as sod
on soh.SalesOrderID = sod.SalesOrderID
inner join Sales.SpecialOfferProduct as sop
on sod.SpecialOfferID = sop.SpecialOfferID
inner join Production.Product as p
on p.ProductID = sop.ProductID

group by DATEDIFF(year,HireDate,getdate()) , emp.BusinessEntityID
order by [Years Of Experience] desc

/*Product Line Profitability by Department
to Find the total sales and profit (subtracting costs) for each product line across departments.*/
/* Calculate profitability by product line and department */
select 
p.ProductLine,
dep.Name as [Depratment Name],
SUM(soh.TotalDue) as [Total Sales],
SUM(sod.OrderQty * p.StandardCost) as [Total Cost],
SUM(soh.TotalDue) - SUM(sod.OrderQty * p.StandardCost) as [Net Profit]

from 
HumanResources.Employee as emp inner join Sales.SalesPerson as sp
on emp.BusinessEntityID = sp.BusinessEntityID
inner join HumanResources.EmployeeDepartmentHistory as empdep
on emp.BusinessEntityID = empdep.BusinessEntityID
inner join HumanResources.Department as dep
on dep.DepartmentID = empdep.DepartmentID
inner join Sales.SalesOrderHeader as soh
on sp.BusinessEntityID = soh.SalesPersonID
inner join Sales.SalesOrderDetail as sod
on soh.SalesOrderID = sod.SalesOrderID
inner join Sales.SpecialOfferProduct as sop
on sod.SpecialOfferID = sop.SpecialOfferID
inner join Production.Product as p
on p.ProductID = sop.ProductID

group by p.ProductLine , dep.Name
order by [Net Profit] desc

/*Gender-based Sales Analysis
to Retrieve the sales performance of male and female employees, including total quantity sold and revenue generated.*/
select
emp.Gender,
COUNT(sod.SalesOrderID) as [Total number of orders handled],
SUM(sod.OrderQty) as [Total Quantity Sold],
SUM(soh.TotalDue) as [Total Revenue]

from 
HumanResources.Employee as emp inner join Sales.SalesPerson as sp
on emp.BusinessEntityID = sp.BusinessEntityID
inner join HumanResources.EmployeeDepartmentHistory as empdep
on emp.BusinessEntityID = empdep.BusinessEntityID
inner join HumanResources.Department as dep
on dep.DepartmentID = empdep.DepartmentID
inner join Sales.SalesOrderHeader as soh
on sp.BusinessEntityID = soh.SalesPersonID
inner join Sales.SalesOrderDetail as sod
on soh.SalesOrderID = sod.SalesOrderID

group by emp.Gender
order by [Total Revenue] desc

/*Comparative Analysis of Colors and Product Lines
Compare the total sales of products of different colors within each product line.*/
select
p.ProductLine,
p.color,
SUM(soh.TotalDue) as [Total Revenue]

from
Sales.SalesOrderDetail as sod inner join Production.Product as p
on p.ProductID = sod.ProductID
inner join Sales.SalesOrderHeader as soh
on soh.SalesOrderID = sod.SalesOrderID

group by p.ProductLine , p.Color
order by [Total Revenue] desc

/*Effect of Tax on Product Line Sales
to Calculate the average tax percentage applied to each product line and its impact on the total sales revenue.*/
/* Retrieve sales revenue and tax data for each product line */
/* Retrieve the sales revenue and total tax for each product line */
select
p.ProductLine,
SUM(sod.LineTotal) as [SalesRevenue],
SUM(soh.TaxAmt) as [TotalTax],
(SUM(soh.TaxAmt) / SUM(sod.LineTotal)) * 100 as [Tax Percentage]
from
Sales.SalesOrderDetail as sod join Production.Product as p 
on sod.ProductID = p.ProductID join Sales.SalesOrderHeader as soh
on sod.SalesOrderID = soh.SalesOrderID
group by p.ProductLine

/*Inventory and Sales Correlation
Identify products with high sales volumes but low inventory levels, and show their respective categories and subcategories.*/
/* Identify products with high sales volumes but low inventory levels and their respective categories and subcategories */
select
p.Name as [ProductName],
p.ProductLine,
pc.Name as [Category],
psc.Name as [Subcategory],
SUM(sod.OrderQty) as [SalesVolume],
pii.Quantity as [InventoryLevel]

from 
Sales.SalesOrderDetail as sod 
inner join Production.Product as p 
on sod.ProductID = p.ProductID 
inner join Production.ProductSubcategory as psc 
on p.ProductSubcategoryID = psc.ProductSubcategoryID inner join Production.ProductCategory as pc 
on psc.ProductCategoryID = pc.ProductCategoryID
inner join Production.ProductInventory as pii 
on p.ProductID = pii.ProductID
group by p.Name, p.ProductLine, pc.Name, psc.Name, pii.Quantity
having SUM(sod.OrderQty) > 1000  -- High sales volume 
and pii.Quantity < 50      -- Low inventory level
order by SalesVolume desc

